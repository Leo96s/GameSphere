// <auto-generated />
using System;
using GameSphere_backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GameSphere_backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241219173159_add_quizz_to_database")]
    partial class add_quizz_to_database
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GameSphere_backend.Models.Quizz", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Quizzid")
                        .HasColumnType("integer");

                    b.Property<int>("difficulty")
                        .HasColumnType("integer");

                    b.Property<int>("numberOfQuests")
                        .HasColumnType("integer");

                    b.Property<DateTime>("registrationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("userId")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Quizzid");

                    b.HasIndex("userId");

                    b.ToTable("Quizzs");
                });

            modelBuilder.Entity("GameSphere_backend.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("externalId")
                        .HasColumnType("integer");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("gender")
                        .HasColumnType("integer");

                    b.Property<string>("hashedPassword")
                        .HasColumnType("text");

                    b.Property<byte[]>("image")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("level")
                        .HasColumnType("integer");

                    b.Property<DateTime>("registrationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("totalPoints")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GameSphere_backend.Models.Quizz", b =>
                {
                    b.HasOne("GameSphere_backend.Models.Quizz", null)
                        .WithMany("Quizzs")
                        .HasForeignKey("Quizzid");

                    b.HasOne("GameSphere_backend.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("GameSphere_backend.Models.Quizz", b =>
                {
                    b.Navigation("Quizzs");
                });
#pragma warning restore 612, 618
        }
    }
}
